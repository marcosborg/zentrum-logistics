{
  "version": 3,
  "sources": ["../../../../../node_modules/@capacitor/preferences/dist/esm/web.js"],
  "sourcesContent": ["import { WebPlugin } from '@capacitor/core';\nexport class PreferencesWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.group = 'CapacitorStorage';\n    }\n    async configure({ group }) {\n        if (typeof group === 'string') {\n            this.group = group;\n        }\n    }\n    async get(options) {\n        const value = this.impl.getItem(this.applyPrefix(options.key));\n        return { value };\n    }\n    async set(options) {\n        this.impl.setItem(this.applyPrefix(options.key), options.value);\n    }\n    async remove(options) {\n        this.impl.removeItem(this.applyPrefix(options.key));\n    }\n    async keys() {\n        const keys = this.rawKeys().map(k => k.substring(this.prefix.length));\n        return { keys };\n    }\n    async clear() {\n        for (const key of this.rawKeys()) {\n            this.impl.removeItem(key);\n        }\n    }\n    async migrate() {\n        var _a;\n        const migrated = [];\n        const existing = [];\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            const key = oldkey.substring(oldprefix.length);\n            const value = (_a = this.impl.getItem(oldkey)) !== null && _a !== void 0 ? _a : '';\n            const { value: currentValue } = await this.get({ key });\n            if (typeof currentValue === 'string') {\n                existing.push(key);\n            }\n            else {\n                await this.set({ key, value });\n                migrated.push(key);\n            }\n        }\n        return { migrated, existing };\n    }\n    async removeOld() {\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            this.impl.removeItem(oldkey);\n        }\n    }\n    get impl() {\n        return window.localStorage;\n    }\n    get prefix() {\n        return this.group === 'NativeStorage' ? '' : `${this.group}.`;\n    }\n    rawKeys() {\n        return Object.keys(this.impl).filter(k => k.indexOf(this.prefix) === 0);\n    }\n    applyPrefix(key) {\n        return this.prefix + key;\n    }\n}\n"],
  "mappings": ";;;;;;;;AACO,IAAM,iBAAN,cAA6B,UAAU;AAAA,EAC1C,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,QAAQ;AAAA,EACjB;AAAA,EACM,UAAU,IAAW;AAAA,+CAAX,EAAE,MAAM,GAAG;AACvB,UAAI,OAAO,UAAU,UAAU;AAC3B,aAAK,QAAQ;AAAA,MACjB;AAAA,IACJ;AAAA;AAAA,EACM,IAAI,SAAS;AAAA;AACf,YAAM,QAAQ,KAAK,KAAK,QAAQ,KAAK,YAAY,QAAQ,GAAG,CAAC;AAC7D,aAAO,EAAE,MAAM;AAAA,IACnB;AAAA;AAAA,EACM,IAAI,SAAS;AAAA;AACf,WAAK,KAAK,QAAQ,KAAK,YAAY,QAAQ,GAAG,GAAG,QAAQ,KAAK;AAAA,IAClE;AAAA;AAAA,EACM,OAAO,SAAS;AAAA;AAClB,WAAK,KAAK,WAAW,KAAK,YAAY,QAAQ,GAAG,CAAC;AAAA,IACtD;AAAA;AAAA,EACM,OAAO;AAAA;AACT,YAAM,OAAO,KAAK,QAAQ,EAAE,IAAI,OAAK,EAAE,UAAU,KAAK,OAAO,MAAM,CAAC;AACpE,aAAO,EAAE,KAAK;AAAA,IAClB;AAAA;AAAA,EACM,QAAQ;AAAA;AACV,iBAAW,OAAO,KAAK,QAAQ,GAAG;AAC9B,aAAK,KAAK,WAAW,GAAG;AAAA,MAC5B;AAAA,IACJ;AAAA;AAAA,EACM,UAAU;AAAA;AACZ,UAAI;AACJ,YAAM,WAAW,CAAC;AAClB,YAAM,WAAW,CAAC;AAClB,YAAM,YAAY;AAClB,YAAM,OAAO,OAAO,KAAK,KAAK,IAAI,EAAE,OAAO,OAAK,EAAE,QAAQ,SAAS,MAAM,CAAC;AAC1E,iBAAW,UAAU,MAAM;AACvB,cAAM,MAAM,OAAO,UAAU,UAAU,MAAM;AAC7C,cAAM,SAAS,KAAK,KAAK,KAAK,QAAQ,MAAM,OAAO,QAAQ,OAAO,SAAS,KAAK;AAChF,cAAM,EAAE,OAAO,aAAa,IAAI,MAAM,KAAK,IAAI,EAAE,IAAI,CAAC;AACtD,YAAI,OAAO,iBAAiB,UAAU;AAClC,mBAAS,KAAK,GAAG;AAAA,QACrB,OACK;AACD,gBAAM,KAAK,IAAI,EAAE,KAAK,MAAM,CAAC;AAC7B,mBAAS,KAAK,GAAG;AAAA,QACrB;AAAA,MACJ;AACA,aAAO,EAAE,UAAU,SAAS;AAAA,IAChC;AAAA;AAAA,EACM,YAAY;AAAA;AACd,YAAM,YAAY;AAClB,YAAM,OAAO,OAAO,KAAK,KAAK,IAAI,EAAE,OAAO,OAAK,EAAE,QAAQ,SAAS,MAAM,CAAC;AAC1E,iBAAW,UAAU,MAAM;AACvB,aAAK,KAAK,WAAW,MAAM;AAAA,MAC/B;AAAA,IACJ;AAAA;AAAA,EACA,IAAI,OAAO;AACP,WAAO,OAAO;AAAA,EAClB;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK,UAAU,kBAAkB,KAAK,GAAG,KAAK,KAAK;AAAA,EAC9D;AAAA,EACA,UAAU;AACN,WAAO,OAAO,KAAK,KAAK,IAAI,EAAE,OAAO,OAAK,EAAE,QAAQ,KAAK,MAAM,MAAM,CAAC;AAAA,EAC1E;AAAA,EACA,YAAY,KAAK;AACb,WAAO,KAAK,SAAS;AAAA,EACzB;AACJ;",
  "names": []
}
